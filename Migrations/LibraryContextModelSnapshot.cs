// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolLibrary.DAL;

namespace SchoolLibrary.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IdentityUserClaims");
                });

            modelBuilder.Entity("SchoolLibrary.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolLibrary.Models.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            id = 1,
                            price = 5.0,
                            title = "Effective C#, 2nd Edition"
                        },
                        new
                        {
                            id = 2,
                            price = 4.2000000000000002,
                            title = "C# 3.0 Cookbook, 3rd Edition"
                        },
                        new
                        {
                            id = 3,
                            price = 24.5,
                            title = "Learning C# 3.0"
                        },
                        new
                        {
                            id = 4,
                            price = 8.5,
                            title = "Programming C# 3.0, Fifth Edition"
                        },
                        new
                        {
                            id = 5,
                            price = 3.7000000000000002,
                            title = "C# 3.0 Design Patterns"
                        },
                        new
                        {
                            id = 6,
                            price = 29.0,
                            title = "Build Your Own ASP.NET 4 Web Site Using C# & VB, 4th Edition"
                        },
                        new
                        {
                            id = 7,
                            price = 20.0,
                            title = "C# 9.0 Pocket Reference"
                        },
                        new
                        {
                            id = 8,
                            price = 56.700000000000003,
                            title = "C# Deconstructed"
                        },
                        new
                        {
                            id = 9,
                            price = 17.0,
                            title = "C# Database Basics"
                        },
                        new
                        {
                            id = 10,
                            price = 11.800000000000001,
                            title = "C# 5.0 Pocket Reference"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
